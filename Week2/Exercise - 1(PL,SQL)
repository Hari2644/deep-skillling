-- DROP tables if they exist
BEGIN
  EXECUTE IMMEDIATE 'DROP TABLE LOANS';
  EXECUTE IMMEDIATE 'DROP TABLE CUSTOMERS';
EXCEPTION
  WHEN OTHERS THEN NULL;
END;
/
-- CREATE tables
CREATE TABLE CUSTOMERS (
  CUSTOMER_ID NUMBER PRIMARY KEY,
  AGE NUMBER,
  BALANCE NUMBER,
  ISVIP VARCHAR2(5) DEFAULT 'FALSE'
);

CREATE TABLE CUSTOMERS (
  CUSTOMER_ID NUMBER PRIMARY KEY,
  AGE NUMBER,
  BALANCE NUMBER,
  ISVIP VARCHAR2(5) DEFAULT 'FALSE'
);
CREATE TABLE LOANS (
  LOAN_ID NUMBER PRIMARY KEY,
  CUSTOMER_ID NUMBER,
  INTEREST_RATE NUMBER(5,2),
  DUE_DATE DATE,
  FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID)
);


-- INSERT data
INSERT INTO CUSTOMERS (CUSTOMER_ID, AGE, BALANCE) VALUES (1, 65, 12000);
INSERT INTO CUSTOMERS (CUSTOMER_ID, AGE, BALANCE) VALUES (2, 45, 5000);
INSERT INTO CUSTOMERS (CUSTOMER_ID, AGE, BALANCE) VALUES (3, 70, 20000);
INSERT INTO CUSTOMERS (CUSTOMER_ID, AGE, BALANCE) VALUES (4, 58, 11000);
INSERT INTO CUSTOMERS (CUSTOMER_ID, AGE, BALANCE) VALUES (5, 62, 8000);

INSERT INTO LOANS (LOAN_ID, CUSTOMER_ID, INTEREST_RATE, DUE_DATE) VALUES (100, 1, 10.50, SYSDATE + 15); 
INSERT INTO LOANS (LOAN_ID, CUSTOMER_ID, INTEREST_RATE, DUE_DATE) VALUES (101, 2, 8.00, SYSDATE + 40);  
INSERT INTO LOANS (LOAN_ID, CUSTOMER_ID, INTEREST_RATE, DUE_DATE) VALUES (102, 3, 12.00, SYSDATE + 10); 
INSERT INTO LOANS (LOAN_ID, CUSTOMER_ID, INTEREST_RATE, DUE_DATE) VALUES (103, 4, 7.50, SYSDATE + 5);   
INSERT INTO LOANS (LOAN_ID, CUSTOMER_ID, INTEREST_RATE, DUE_DATE) VALUES (104, 5, 9.00, SYSDATE + 35);    

COMMIT;

SET SERVEROUTPUT ON;

BEGIN
  FOR cust_rec IN (SELECT CUSTOMER_ID, AGE FROM CUSTOMERS) LOOP
    IF cust_rec.AGE > 60 THEN
      UPDATE LOANS
      SET INTEREST_RATE = INTEREST_RATE * 0.99
      WHERE CUSTOMER_ID = cust_rec.CUSTOMER_ID;
    END IF;
  END LOOP;
  COMMIT;
  DBMS_OUTPUT.PUT_LINE('Interest rates updated for customers above 60.');
END;
/
SET SERVEROUTPUT ON;

BEGIN
  FOR cust_rec IN (SELECT CUSTOMER_ID, BALANCE FROM CUSTOMERS) LOOP
    IF cust_rec.BALANCE > 10000 THEN
      UPDATE CUSTOMERS
      SET IsVIP = 'TRUE'
      WHERE CUSTOMER_ID = cust_rec.CUSTOMER_ID;
    END IF;
  END LOOP;
  COMMIT;
  DBMS_OUTPUT.PUT_LINE('VIP status updated for customers with balance > 10,000.');
END;
/
SET SERVEROUTPUT ON;

BEGIN
  FOR loan_rec IN (
    SELECT CUSTOMER_ID, DUE_DATE
    FROM LOANS
    WHERE DUE_DATE BETWEEN SYSDATE AND SYSDATE + 30
  ) LOOP
    DBMS_OUTPUT.PUT_LINE(
      'Reminder: Customer ID ' || loan_rec.CUSTOMER_ID || ', your loan is due on ' || TO_CHAR(loan_rec.DUE_DATE, 'DD-MON-YYYY')
    );
  END LOOP;
END;
/



